#include "NEWSHAPE.h"

NEWSHAPE::NEWSHAPE(Shape *obj1, Shape *obj2)
{
    shape1 = obj1;
    shape2 = obj2;

    shape1->addDependentShape(this);
    shape2->addDependentShape(this);

    setFlags(ItemIsSelectable);

    setToolTip("NEWSHAPE");
    updateItem();
}

void NEWSHAPE::updateItem()
{
    // update all objects to draw and trigger geometry change

    prepareGeometryChange();
}

QRectF NEWSHAPE::boundingRect() const
{
    return NEWSHAPE::boundingRect
}

void NEWSHAPE::paint(QPainter *painter,
                   const QStyleOptionGraphicsItem *option,
                   QWidget *widget)
{
    (void)option;
    (void)widget;

    // use given painter to draw the object
    painter->setPen(QPen(QColor(79, 106, 25), 3, Qt::SolidLine,
                         Qt::FlatCap, Qt::MiterJoin));
    painter->setBrush(QColor(122, 163, 39));
    painter->setRenderHint(QPainter::Antialiasing, true);
    painter->setRenderHint(QPainter::SmoothPixmapTransform, true);
    painter->drawLine(line);
}

QPainterPath NEWSHAPE::shape() const
{
    // optional selection path if not implemented the boundingRect() is used
    QPainterPath path;
    path.moveTo(line.p1());
    path.lineTo(line.p2());
    return path;
}
